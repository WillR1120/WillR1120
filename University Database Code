import java.awt.*;
import java.util.ArrayList;
import javax.swing.*;

public class MainUI {
    private JFrame frame;
    private JTextArea outputArea;
    private ArrayList<Student> students;
    private ArrayList<Professor> professors;

    public MainUI() {
        students = new ArrayList<>();
        professors = new ArrayList<>();

        frame = new JFrame("University Database");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(700, 500);

        JPanel panel = new JPanel(new BorderLayout());

        outputArea = new JTextArea();
        outputArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(outputArea);
        panel.add(scrollPane, BorderLayout.CENTER);

        JPanel buttonPanel = new JPanel(new FlowLayout());

        JButton addStudentBtn = new JButton("Add Student");
        JButton addProfessorBtn = new JButton("Add Professor");
        JButton searchStudentBtn = new JButton("Search Student");
        JButton searchProfessorBtn = new JButton("Search Professor");

        addStudentBtn.addActionListener(e -> addStudent());
        addProfessorBtn.addActionListener(e -> addProfessor());
        searchStudentBtn.addActionListener(e -> searchStudent());
        searchProfessorBtn.addActionListener(e -> searchProfessor());

        buttonPanel.add(addStudentBtn);
        buttonPanel.add(addProfessorBtn);
        buttonPanel.add(searchStudentBtn);
        buttonPanel.add(searchProfessorBtn);

        panel.add(buttonPanel, BorderLayout.SOUTH);
        frame.add(panel);
        frame.setVisible(true);
    }

    private void addStudent() {
        String firstName = JOptionPane.showInputDialog("Enter first name:");
        String lastName = JOptionPane.showInputDialog("Enter last name:");
        int id = Integer.parseInt(JOptionPane.showInputDialog("Enter ID:"));
        String major = JOptionPane.showInputDialog("Enter major:");
        double gpa = Double.parseDouble(JOptionPane.showInputDialog("Enter GPA:"));
        int credits = Integer.parseInt(JOptionPane.showInputDialog("Enter credits:"));

        Student student = new Student(firstName, lastName, id, major, gpa, credits);
        students.add(student);
        outputArea.append("Added Student: " + firstName + " " + lastName + "\n");
    }

    private void addProfessor() {
        String firstName = JOptionPane.showInputDialog("Enter first name:");
        String lastName = JOptionPane.showInputDialog("Enter last name:");
        int id = Integer.parseInt(JOptionPane.showInputDialog("Enter ID:"));
        String dept = JOptionPane.showInputDialog("Enter department:");
        double salary = Double.parseDouble(JOptionPane.showInputDialog("Enter salary:"));

        Professor prof = new Professor(firstName, lastName, id, dept, salary);
        professors.add(prof);
        outputArea.append("Added Professor: " + firstName + " " + lastName + "\n");
    }

    private void searchStudent() {
        int id = Integer.parseInt(JOptionPane.showInputDialog("Enter Student ID:"));
        for (Student s : students) {
            if (s.getId() == id) {
                outputArea.append("\n--- Student Info ---\n");
                outputArea.append("Name: " + s.getFirstName() + " " + s.getLastName() + "\n");
                outputArea.append("Major: " + s.getMajor() + " | GPA: " + s.getGpa() + " | Credits: " + s.getCredits() + "\n");
                outputArea.append("-------------------\n");
                return;
            }
        }
        outputArea.append("Student not found.\n");
    }

    private void searchProfessor() {
        int id = Integer.parseInt(JOptionPane.showInputDialog("Enter Professor ID:"));
        for (Professor p : professors) {
            if (p.getId() == id) {
                outputArea.append("\n--- Professor Info ---\n");
                outputArea.append("Name: " + p.getFirstName() + " " + p.getLastName() + "\n");
                outputArea.append("Department: " + p.getDepartment() + " | Salary: " + p.getSalary() + "\n");
                outputArea.append("--------------------\n");
                return;
            }
        }
        outputArea.append("Professor not found.\n");
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new MainUI());
    }
}




public class Person{
    private String firstName;
    private String lastName;
    private int id;

    public Person(String firstName, String lastName, int id) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.id = id;
    }

    public String getFirstName() {
        return firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public int getId() {
        return id;
    }

    public void display() {
        System.out.println("Name: " + this.firstName + " " + this.lastName);
        System.out.println("ID: " + this.id);
    }
}




public class Professor extends Person {
    private String department;
    private double salary;

    public Professor(String firstName, String lastName, int id, String department, double salary) {
        super(firstName, lastName, id);
        this.department = department;
        this.salary = salary;
    }

    public String getDepartment() { return department; }
    public double getSalary() { return salary; }
    public void setDepartment(String department) { this.department = department; }
    public void setSalary(double salary) { this.salary = salary; }
}



public class Student extends Person {
    private String major;
    private double gpa;
    private int credits;
    private double balance;
    private boolean transfer;

    public Student(String firstName, String lastName, int id, String major, double gpa, int credits) {
        super(firstName, lastName, id);
        this.major = major;
        this.gpa = gpa;
        this.credits = credits;
        this.balance = 0;
        this.transfer = false;
    }

    public String getMajor() { return major; }
    public double getGpa() { return gpa; }
    public int getCredits() { return credits; }
    public double getBalance() { return balance; }
    public boolean getTransfer() { return transfer; }

    public void setMajor(String major) { this.major = major; }
    public void setGpa(double gpa) { this.gpa = gpa; }
    public void setCredits(int credits) { this.credits = credits; }
    public void setBalance(double balance) { this.balance = balance; }
    public void setTransfer(boolean transfer) { this.transfer = transfer; }
}
